//
// automatically generated by spin2cpp on Mon Nov 26 21:30:33 2012
// ./spin2cpp.linux --gas FFDS1.spin
// Added volatile keywords to private variables.
//

#ifndef FFDS1_Class_Defined__
#define FFDS1_Class_Defined__

#include <stdint.h>

class FFDS1 {
public:
  static const int Buf_len = 987; //Warning! Do not change: it's hardcoded elsewhere (including in the beginning of the asm section)
  static const int Min_half_period = 86;
  static const int Xon = 17;
  static const int Xoff = 19;
  int32_t	Start(int32_t Rx_pin, int32_t Tx_pin, int32_t Rate);
  int32_t	Stop(void);
  int32_t	Setbaud(int32_t Rate);
  int32_t	Setbaudclock(int32_t Rate, int32_t Sysclock);
  int32_t	Str(int32_t String_ptr);
  int32_t	Tx(uint8_t Char_val);
  int32_t	Txbuf(int32_t Buf_ptr, int32_t Buffer_bytes);
  int32_t	Txbufnowait(int32_t Buf_ptr, int32_t Buffer_bytes);
  int32_t	Waitfortx(void);
  int32_t	Rxflush(void);
  int32_t	Rxcheck(void);
  int32_t	Rxtime(int32_t Ms);
  int32_t	Rx(void);
  int32_t	Dec(int32_t Value);
  int32_t	Hex(int32_t Value, int32_t Digits);
  int32_t	Bin(int32_t Value, int32_t Digits);
  int32_t	Atoi(int32_t Strptr);
  int32_t	Htoi(int32_t Strptr);
private:
  volatile int32_t	Write_buf_ptr;
  volatile int32_t	Send_temp;
  volatile int32_t	Half_bit_period;
  volatile uint16_t	Rx_head, Rx_tail;
  volatile uint8_t	Rx_buffer[Buf_len];
  volatile uint8_t	Cog;
};

#endif


//    "		shr	Data_in, #($20 - 8)\n"

