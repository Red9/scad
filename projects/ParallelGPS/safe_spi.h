//
// automatically generated by spin2cpp v1.01 on Wed Dec 12 21:35:05 2012
// spin2cpp.linux --main test_nl.spin 
//

#ifndef safe_spi_Class_Defined__
#define safe_spi_Class_Defined__

#include <stdint.h>

class safe_spi {
public:
  static const int Type_mmc = 1;
  static const int Type_sd = 2;
  static const int Type_sdhc = 3;
  static const int Err_card_not_reset = -1;
  static const int Err_3v3_not_supported = -2;
  static const int Err_ocr_failed = -3;
  static const int Err_block_not_long_aligned = -4;
  static const int Err_asm_no_read_token = 100;
  static const int Err_asm_block_not_written = 101;
  static const int Err_spi_engine_not_running = -999;
  static const int Err_card_busy_timeout = -1000;
  static const int Cmd0 = 64;
  static const int Cmd1 = 65;
  static const int Acmd41 = 233;
  static const int Cmd8 = 72;
  static const int Cmd9 = 73;
  static const int Cmd10 = 74;
  static const int Cmd12 = 76;
  static const int Cmd13 = 77;
  static const int Acmd13 = 205;
  static const int Cmd16 = 80;
  static const int Cmd17 = 81;
  static const int Cmd18 = 82;
  static const int Cmd23 = 87;
  static const int Acmd23 = 215;
  static const int Cmd24 = 88;
  static const int Cmd25 = 89;
  static const int Cmd55 = 119;
  static const int Cmd58 = 122;
  static const int Cmd59 = 123;
  volatile static uint8_t dat[];
  int32_t	Start(int32_t Basepin);
  int32_t	Readblock(int32_t Block_index, int32_t Buffer_address);
  int32_t	Writeblock(int32_t Block_index, int32_t Buffer_address);
  int32_t	Get_seconds(void);
  int32_t	Get_milliseconds(void);
  int32_t	Start_explicit(int32_t Do, int32_t Clk, int32_t Di, int32_t Cs);
  int32_t	Release(void);
  int32_t	Stop(void);
private:
  int32_t	volatile Spi_engine_cog;
  int32_t	volatile Spi_command;
  int32_t	volatile Spi_block_index;
  int32_t	volatile Spi_buffer_address;
  int32_t	Crash(int32_t Abort_code);
  int32_t	Send_cmd_slow(int32_t Cmd, int32_t Val, int32_t Crc);
  int32_t	Send_slow(int32_t Value, int32_t Bits_to_send);
  int32_t	Read_32_slow(void);
  int32_t	Read_slow(void);
};

#endif
